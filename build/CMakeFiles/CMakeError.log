Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags:  

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -c 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
*Initialization*:1: missing token-sequence in `#assert'


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags:  

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -c 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -Aa 

The output was:
1
*Initialization*:1: missing token-sequence in `#assert'


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: C:/FPC/3.2.0/bin/i386-win32/gcc.exe 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
gcc.exe: installation problem, cannot exec `cc1': No such file or directory


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
gcc.exe: No input files
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
gcc.exe: No input files
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: C:/Users/Alejandro Mejía/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Práctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/FPC/3.2.0/bin/i386-win32/make.exe cmTC_530f7/fast && C:/FPC/3.2.0/bin/i386-win32/make.exe  -f CMakeFiles/cmTC_530f7.dir/build.make CMakeFiles/cmTC_530f7.dir/build
make.exe[1]: Entering directory `C:/Users/Alejandro MejÝa/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Prßctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_530f7.dir/CMakeCCompilerABI.c.obj
C:/FPC/3.2.0/bin/i386-win32/gcc.exe    -o CMakeFiles/cmTC_530f7.dir/CMakeCCompilerABI.c.obj -c "C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.19/Modules/CMakeCCompilerABI.c"
Usage: cpp [switches] input output
Switches:
  -include <file>           Include the contents of <file> before other files
  -imacros <file>           Accept definition of marcos in <file>
  -iprefix <path>           Specify <path> as a prefix for next two options
  -iwithprefix <dir>        Add <dir> to the end of the system include paths
  -iwithprefixbefore <dir>  Add <dir> to the end of the main include paths
  -isystem <dir>            Add <dir> to the start of the system include paths
  -idirafter <dir>          Add <dir> to the end of the system include paths
  -I <dir>                  Add <dir> to the end of the main include paths
  -nostdinc                 Do not search the system include directories
  -nostdinc++               Do not search the system include directories for C++
  -o <file>                 Put output into <file>
  -pedantic                 Issue all warnings demanded by strict ANSI C
  -traditional              Follow K&R pre-processor behaviour
  -trigraphs                Support ANSI C trigraphs
  -lang-c                   Assume that the input sources are in C
  -lang-c89                 Assume that the input is C89; depricated
  -lang-c++                 Assume that the input sources are in C++
  -lang-objc                Assume that the input sources are in ObjectiveC
  -lang-objc++              Assume that the input sources are in ObjectiveC++
  -lang-asm                 Assume that the input sources are in assembler
  -lang-chill               Assume that the input sources are in Chill
  -std=<std name>           Specify the conformance standard; one of:
                            gnu89, gnu9x, c89, c9x, iso9899:1990,
                            iso9899:199409, iso9899:199x
  -+                        Allow parsing of C++ style features
  -w                        Inhibit warning messages
  -Wtrigraphs               Warn if trigraphs are encountered
  -Wno-trigraphs            Do not warn about trigraphs
  -Wcomment{s}              Warn if one comment starts inside another
  -Wno-comment{s}           Do not warn about comments
  -Wtraditional             Warn if a macro argument is/would be turned into
                             a string if -traditional is specified
  -Wno-traditional          Do not warn about stringification
  -Wundef                   Warn if an undefined macro is used by #if
  -Wno-undef                Do not warn about testing undefined macros
  -Wimport                  Warn about the use of the #import directive
  -Wno-import               Do not warn about the use of #import
  -Werror                   Treat all warnings as errors
  -Wno-error                Do not treat warnings as errors
  -Wall                     Enable all preprocessor warnings
  -M                        Generate make dependencies
  -MM                       As -M, but ignore system header files
  -MD                       As -M, but put output in a .d file
  -MMD                      As -MD, but ignore system header files
  -MG                       Treat missing header file as generated files
  -g                        Include #define and #undef directives in the output
  -D<macro>                 Define a <macro> with string '1' as its value
  -D<macro>=<val>           Define a <macro> with <val> as its value
  -A<question> (<answer>)   Assert the <answer> to <question>
  -U<macro>                 Undefine <macro> 
  -u or -undef              Do not predefine any macros
  -v                        Display the version number
  -H                        Print the name of header files as they are used
  -C                        Do not discard comments
  -dM                       Display a list of macro definitions active at end
  -dD                       Preserve macro definitions in output
  -dN                       As -dD except that only the names are preserved
  -dI                       Include #include directives in the output
  -ifoutput                 Describe skipped code blocks in output 
  -P                        Do not generate #line directives
  -$                        Do not include '$' in identifiers
  -remap                    Remap file names when including files.
  -h or --help              Display this information
cpp: Too many arguments
make.exe[1]: *** [CMakeFiles/cmTC_530f7.dir/CMakeCCompilerABI.c.obj] Error 1
make.exe[1]: Leaving directory `C:/Users/Alejandro MejÝa/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Prßctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp'
make.exe: *** [cmTC_530f7/fast] Error 2




Determining if the C compiler works failed with the following output:
Change Dir: C:/Users/Alejandro Mejía/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Práctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp

Run Build Command(s):C:/FPC/3.2.0/bin/i386-win32/make.exe cmTC_7f261/fast && C:/FPC/3.2.0/bin/i386-win32/make.exe  -f CMakeFiles/cmTC_7f261.dir/build.make CMakeFiles/cmTC_7f261.dir/build
make.exe[1]: Entering directory `C:/Users/Alejandro MejÝa/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Prßctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7f261.dir/testCCompiler.c.obj
C:/FPC/3.2.0/bin/i386-win32/gcc.exe    -o CMakeFiles/cmTC_7f261.dir/testCCompiler.c.obj -c "C:/Users/Alejandro Mej├¡a/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Pr├íctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp/testCCompiler.c"
gcc.exe: C:/Users/Alejandro Mej+ía/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Pr+Ýctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp/testCCompiler.c: No such file or directory
gcc.exe: No input files
make.exe[1]: *** [CMakeFiles/cmTC_7f261.dir/testCCompiler.c.obj] Error 1
make.exe[1]: Leaving directory `C:/Users/Alejandro MejÝa/OneDrive/Documents/UNLP/2021/Semestre I/IDL/Prßctica/Practica 0/IDL - Practica 0/build/CMakeFiles/CMakeTmp'
make.exe: *** [cmTC_7f261/fast] Error 2



